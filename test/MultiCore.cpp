
//マルチスレッドのタスクハンドル格納用です。
//タスクハンドルはアドレスで渡す必要があるため、ここで配列として設定しています。
TaskHandle_t thp[1];

//カウントを加算し、シリアルモニタで表示するための変数を設定しています。
//ここで宣言した変数は、コアを跨いでアクセスできる変数になります。
long a = 0;

//セットアップ関数です。スレッドの設定はここで行います。
void setup() {

  //シリアルモニタ表示用の宣言です。
  Serial.begin(115200);

  //ここでスレッドを立てることを宣言しています。
  xTaskCreatePinnedToCore(Core0a, "Core0a", 4096, NULL, 3, &thp[0], 0); 
  //xTaskCreatePinnedToCore()がスレッドの宣言です。
  //内容は([タスク名], "[タスク名]", [スタックメモリサイズ(4096or8192)],
  //      NULL, [タスク優先順位](1-24,大きいほど優先順位が高い)],
  //      [宣言したタスクハンドルのポインタ(&thp[0])], [Core ID(0 or 1)]); 
}

void loop() {//メインCPU(Core1)で実行するプログラム
  Serial.println(a);//変数aの中身をシリアル出力
  delay(100);//100/1000秒待つ
}

void Core0a(void *args) {//サブCPU(Core0)で実行するプログラム
  while (1) {//ここで無限ループを作っておく
    //サブで実行するプログラムを書く
    delay(1);//1/1000秒待つ
    a++;//aに１を加算する
  }
}